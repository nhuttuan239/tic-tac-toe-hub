{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Cder/reactJS/fw-tic-tac-toe/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null); //Declaring a Winner\n\n  useEffect(() => {\n    const newWinner = calculateWinner(squares);\n    setWinner(newWinner);\n  }, [squares]); //function to check if a player has won.\n  //If a player has won, we can display text such as “Winner: X” or “Winner: O”.\n  //Input: squares: given an array of 9 squares:'X', 'O', or null.\n\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }; //Handle player\n\n\n  const handleClick = i => {\n    const newSquares = squares.slice();\n\n    if (calculateWinner(newSquares) || newSquares[i]) {\n      return;\n    }\n\n    newSquares[i] = xIsNext ? \"X\" : \"O\";\n    setSquares(newSquares);\n    setXIsNext(prevState => !prevState);\n  }; //Restart game\n\n\n  const handleRestart = () => {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"result\",\n      children: [\"Winner is: \", winner ? winner : \"N/N\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"player\",\n        children: [\"Next player is: \", xIsNext ? \"X\" : \"O\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        squares: squares,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      className: \"restart-btn\",\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"UOTo20OkPSYt5GvTmRYocifD5dQ=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","Game","squares","setSquares","Array","fill","xIsNext","setXIsNext","winner","setWinner","newWinner","calculateWinner","lines","i","length","a","b","c","handleClick","newSquares","slice","prevState","handleRestart"],"sources":["/Users/macbookpro/Documents/Cder/reactJS/fw-tic-tac-toe/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board.js\";\n\nfunction Game() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n\n  //Declaring a Winner\n  useEffect(() => {\n    const newWinner = calculateWinner(squares);\n    setWinner(newWinner);\n  }, [squares]);\n\n  //function to check if a player has won.\n  //If a player has won, we can display text such as “Winner: X” or “Winner: O”.\n  //Input: squares: given an array of 9 squares:'X', 'O', or null.\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  //Handle player\n  const handleClick = (i) => {\n    const newSquares = squares.slice();\n\n    if (calculateWinner(newSquares) || newSquares[i]) {\n      return;\n    }\n    newSquares[i] = xIsNext ? \"X\" : \"O\";\n    setSquares(newSquares);\n    setXIsNext((prevState) => !prevState);\n  };\n\n  //Restart game\n  const handleRestart = () => {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  };\n\n  return (\n    <div className=\"main\">\n      <h2 className=\"result\">Winner is: {winner ? winner : \"N/N\"}</h2>\n      <div className=\"game\">\n        <span className=\"player\">Next player is: {xIsNext ? \"X\" : \"O\"}</span>\n        <Board squares={squares} handleClick={handleClick} />\n      </div>\n      <button onClick={handleRestart} className=\"restart-btn\">\n        Restart\n      </button>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
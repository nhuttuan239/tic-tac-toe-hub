{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Cder/reactJS/tic-tac-toe/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board.js\";\nimport History from \"./History.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [history, setHistory] = useState([{\n    squares: Array(9).fill(null)\n  }]);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [stepNumber, setStepNumber] = useState(0); //Declaring a Winner\n\n  useEffect(() => {\n    const newWinner = calculateWinner(history[history.length - 1].squares);\n    setWinner(newWinner);\n  }, [history]); //function to check if a player has won.\n  //If a player has won, we can display text such as “Winner: X” or “Winner: O”.\n  //Input: squares: given an array of 9 squares:'X', 'O', or null.\n\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }; //Handle player\n\n\n  const handleClick = i => {\n    const currentHistory = history.slice(0, stepNumber + 1);\n    console.log(currentHistory);\n    const current = currentHistory[currentHistory.length - 1];\n    console.log(current);\n    const squares = current.squares.slice();\n    console.log(squares);\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(currentHistory.concat([{\n      squares: squares\n    }]));\n    setStepNumber(currentHistory.length);\n    setXIsNext(prevState => !prevState);\n  }; //Undo game\n\n\n  const jumpTo = step => {\n    setStepNumber(step);\n    setXIsNext(step % 2 === 0);\n  }; //Restart game\n\n\n  const handleRestart = () => {\n    setStepNumber(0);\n    setHistory([{\n      squares: Array(9).fill(null)\n    }]);\n    setXIsNext(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"result\",\n      children: [\"Winner is: \", winner ? winner : \"N/N\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"player\",\n        children: [\"Next player is: \", xIsNext ? \"X\" : \"O\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        squares: history[stepNumber].squares,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        history: history,\n        jumpTo: jumpTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      className: \"restart-btn\",\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"PfrpLVeGSGXMwLmvQUEBT+0/cAI=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","History","Game","history","setHistory","squares","Array","fill","xIsNext","setXIsNext","winner","setWinner","stepNumber","setStepNumber","newWinner","calculateWinner","length","lines","i","a","b","c","handleClick","currentHistory","slice","console","log","current","concat","prevState","jumpTo","step","handleRestart"],"sources":["/Users/macbookpro/Documents/Cder/reactJS/tic-tac-toe/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board.js\";\nimport History from \"./History.js\";\n\nfunction Game() {\n  const [history, setHistory] = useState([\n    {\n      squares: Array(9).fill(null),\n    },\n  ]);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [stepNumber, setStepNumber] = useState(0);\n\n  //Declaring a Winner\n  useEffect(() => {\n    const newWinner = calculateWinner(history[history.length - 1].squares);\n    setWinner(newWinner);\n  }, [history]);\n\n  //function to check if a player has won.\n  //If a player has won, we can display text such as “Winner: X” or “Winner: O”.\n  //Input: squares: given an array of 9 squares:'X', 'O', or null.\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  //Handle player\n  const handleClick = (i) => {\n    const currentHistory = history.slice(0, stepNumber + 1);\n    console.log(currentHistory);\n    const current = currentHistory[currentHistory.length - 1];\n    console.log(current);\n    const squares = current.squares.slice();\n    console.log(squares);\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(\n      currentHistory.concat([\n        {\n          squares: squares,\n        },\n      ])\n    );\n    setStepNumber(currentHistory.length);\n    setXIsNext((prevState) => !prevState);\n  };\n\n  //Undo game\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXIsNext(step % 2 === 0);\n  };\n\n  //Restart game\n  const handleRestart = () => {\n    setStepNumber(0);\n    setHistory([\n      {\n        squares: Array(9).fill(null),\n      },\n    ]);\n    setXIsNext(true);\n  };\n\n  return (\n    <div className=\"main\">\n      <h2 className=\"result\">Winner is: {winner ? winner : \"N/N\"}</h2>\n      <div className=\"game\">\n        <span className=\"player\">Next player is: {xIsNext ? \"X\" : \"O\"}</span>\n        <Board\n          squares={history[stepNumber].squares}\n          handleClick={handleClick}\n        />\n        <History history={history} jumpTo={jumpTo} />\n      </div>\n      <button onClick={handleRestart} className=\"restart-btn\">\n        Restart\n      </button>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CACrC;IACEO,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;EADX,CADqC,CAAD,CAAtC;EAKA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C,CARc,CAUd;;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAGC,eAAe,CAACZ,OAAO,CAACA,OAAO,CAACa,MAAR,GAAiB,CAAlB,CAAP,CAA4BX,OAA7B,CAAjC;IACAM,SAAS,CAACG,SAAD,CAAT;EACD,CAHQ,EAGN,CAACX,OAAD,CAHM,CAAT,CAXc,CAgBd;EACA;EACA;;EACA,MAAMY,eAAe,GAAIV,OAAD,IAAa;IACnC,MAAMY,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;IAUA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACD,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;MACrC,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYJ,KAAK,CAACC,CAAD,CAAvB;;MACA,IACEb,OAAO,CAACc,CAAD,CAAP,IACAd,OAAO,CAACc,CAAD,CAAP,KAAed,OAAO,CAACe,CAAD,CADtB,IAEAf,OAAO,CAACc,CAAD,CAAP,KAAed,OAAO,CAACgB,CAAD,CAHxB,EAIE;QACA,OAAOhB,OAAO,CAACc,CAAD,CAAd;MACD;IACF;;IACD,OAAO,IAAP;EACD,CAtBD,CAnBc,CA2Cd;;;EACA,MAAMG,WAAW,GAAIJ,CAAD,IAAO;IACzB,MAAMK,cAAc,GAAGpB,OAAO,CAACqB,KAAR,CAAc,CAAd,EAAiBZ,UAAU,GAAG,CAA9B,CAAvB;IACAa,OAAO,CAACC,GAAR,CAAYH,cAAZ;IACA,MAAMI,OAAO,GAAGJ,cAAc,CAACA,cAAc,CAACP,MAAf,GAAwB,CAAzB,CAA9B;IACAS,OAAO,CAACC,GAAR,CAAYC,OAAZ;IACA,MAAMtB,OAAO,GAAGsB,OAAO,CAACtB,OAAR,CAAgBmB,KAAhB,EAAhB;IACAC,OAAO,CAACC,GAAR,CAAYrB,OAAZ;;IAEA,IAAIU,eAAe,CAACV,OAAD,CAAf,IAA4BA,OAAO,CAACa,CAAD,CAAvC,EAA4C;MAC1C;IACD;;IACDb,OAAO,CAACa,CAAD,CAAP,GAAaV,OAAO,GAAG,GAAH,GAAS,GAA7B;IACAJ,UAAU,CACRmB,cAAc,CAACK,MAAf,CAAsB,CACpB;MACEvB,OAAO,EAAEA;IADX,CADoB,CAAtB,CADQ,CAAV;IAOAQ,aAAa,CAACU,cAAc,CAACP,MAAhB,CAAb;IACAP,UAAU,CAAEoB,SAAD,IAAe,CAACA,SAAjB,CAAV;EACD,CArBD,CA5Cc,CAmEd;;;EACA,MAAMC,MAAM,GAAIC,IAAD,IAAU;IACvBlB,aAAa,CAACkB,IAAD,CAAb;IACAtB,UAAU,CAACsB,IAAI,GAAG,CAAP,KAAa,CAAd,CAAV;EACD,CAHD,CApEc,CAyEd;;;EACA,MAAMC,aAAa,GAAG,MAAM;IAC1BnB,aAAa,CAAC,CAAD,CAAb;IACAT,UAAU,CAAC,CACT;MACEC,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;IADX,CADS,CAAD,CAAV;IAKAE,UAAU,CAAC,IAAD,CAAV;EACD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAI,SAAS,EAAC,QAAd;MAAA,0BAAmCC,MAAM,GAAGA,MAAH,GAAY,KAArD;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAM,SAAS,EAAC,QAAhB;QAAA,+BAA0CF,OAAO,GAAG,GAAH,GAAS,GAA1D;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QACE,OAAO,EAAEL,OAAO,CAACS,UAAD,CAAP,CAAoBP,OAD/B;QAEE,WAAW,EAAEiB;MAFf;QAAA;QAAA;QAAA;MAAA,QAFF,eAME,QAAC,OAAD;QAAS,OAAO,EAAEnB,OAAlB;QAA2B,MAAM,EAAE2B;MAAnC;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE;MAAQ,OAAO,EAAEE,aAAjB;MAAgC,SAAS,EAAC,aAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GApGQ9B,I;;KAAAA,I;AAsGT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}